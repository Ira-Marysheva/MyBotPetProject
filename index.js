const telegramApi = require('node-telegram-bot-api');
const {gameOption, againOptions} = require('./options')
require('dotenv').config()
const sequelize = require('./db')
const UserModule = require('./models')

const bot = new telegramApi(process.env.TOKEN, {polling: true})

const start = async()=>{
    try {
        await sequelize.authenticate()
        await sequelize.sync()
        let numberAttempts
        let gameId
        const chat = {}
        
        const startGame = async(chatId)=>{
            numberAttempts = 4
            await bot.sendMessage( chatId, '–ó–∞—Ä–∞–∑ –±–æ—Ç –∑–∞–≥–∞–¥–∞—î —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 9, –∞ —Ç–∏ –º–∞—î—à 4 —Å–ø—Ä–æ–±–∏ –π–æ–≥–æ –≤–≥–∞–¥–∞—Ç–∏')
            const randomNumber = Math.floor(Math.random() * 10)
            chat[chatId] = randomNumber
            const gameMessageOptions = await bot.sendMessage(chatId, '–Ø –∑–∞–≥–∞–¥–∞–≤ —á–∏—Å–ª–æ. –í—ñ–¥–≥–∞–¥—É–π—Ç–µ', gameOption)
            gameId = gameMessageOptions.message_id
        }
    
        bot.setMyCommands([
            {command: '/start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞'},
            {command:'/info', description: '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–µ–±–µ'},
            {command:'/game', description: '–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≥—Ä—É'} 
        ])
    
        bot.on('message', async (msg) => {
            const text = msg.text
            const chatId = msg.chat.id
            const firstName = msg.from.first_name
            const userName = msg.from.username
            const userIsBot = msg.from.is_bot
            
            try {
                if(text === '/start'){
                    await UserModule.create({chatId})
                    await bot.sendSticker(chatId, 'https://sl.combot.org/utyaduck/webp/4xf09f918b.webp')
                    return bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç! –†–∞–¥–∞ –±–∞—á–∏—Ç–∏ ${firstName} —É –≤–ª–∞—Å–Ω–æ–º—É –Ω–∞–≤—á–∞–ª—å–Ω–æ–º—É –±–æ—Ç—ñüëã`)
                }
                if(text === '/info'){
                    const user = await UserModule.findOne({where: {chatId}})
                    await bot.sendSticker(chatId, 'https://sl.combot.org/utyaduck/webp/9xf09f988e.webp')
                    return  bot.sendMessage(chatId, `–Ø –º–∞—é —Ç–∞–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–µ–±–µ: \n —ñ–º'—è ${firstName} \n —ñ–º'—è –ø—ñ–¥ —è–∫–∏–º —Ç–∏ –≤ Telegram ${userName} \n i —Ç–∏ ${userIsBot? '–±–æ—Çü§ñ':'–∫–æ—Ä–∏—Å—Ç—É–≤–∞—áüë§'} —É –≥—Ä—ñ –±—É–ª–æ –≤–∏–≥—Ä–∞–Ω–æ ${user.win} —Ä–∞–∑—ñ–≤, –∞ –ø—Ä–æ–≥—Ä–∞–Ω–æ - ${user.fail} —Ä–∞–∑—ñ–≤`)
                }
                if(text === '/game'){
                    await bot.sendSticker(chatId,'https://sl.combot.org/utyaduck/webp/26xf09f93a8.webp')
                    return await startGame(chatId)
                }
        
                await bot.sendSticker(chatId, 'https://sl.combot.org/utyaduck/webp/12xf09fa4b7e2808de29982efb88f.webp')
                return bot.sendMessage(chatId, `–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ—ó –∫–æ–º–∞–Ω–¥–∏, ${firstName} \n –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ –∑–Ω–æ–≤—É`)
            } catch (error) {
                return await bot.sendMessage(chatId, `–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É –ø—ñ–∑–Ω—ñ—à–µ`)
            }
        })
    
        bot.on('callback_query', async(msg) =>{
            const data = msg.data
            const chatId = msg.message.chat.id
            if(data === '/again'){
                await bot.deleteMessage(chatId, gameId )
                return await startGame(chatId)
            }
            bot.sendMessage(chatId, `–í–∏ –æ–±—Ä–∞–ª–∏ —á–∏—Å–ª–æ ${data}`)
            if(+data === chat[chatId]){
                await bot.sendSticker(chatId, 'https://sl.combot.org/utyaduck/webp/38xf09fa5b3.webp')
                return await bot.sendMessage(chatId, '–í—ñ—Ç–∞—é!!! –í–∏ –≤–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ', againOptions)
            }else{
                numberAttempts--
                if(numberAttempts<=0){
                    await bot.sendSticker(chatId, 'https://sl.combot.org/utyaduck/webp/39xf09f98ad.webp')
                    return await bot.sendMessage(chatId, `–í–∏ –Ω–∞–∂–∞–ª—å –ø—Ä–æ–≥—Ä–∞–ª–∏üòî. –ë–æ—Ç –æ–±—Ä–∞–≤ —á–∏—Å–ª–æ ${chat[chatId]}. –ú–æ–∂–ª–∏–≤–æ –ø–æ—â–∞—Å—Ç–∏—Ç—å –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π –≥—Ä—ñ`, againOptions)
                }
                await bot.sendSticker(chatId, 'https://sl.combot.org/utyaduck/webp/37xf09f98a2.webp')
                await bot.sendMessage(chatId, `–ù–∞–∂–∞–ª—å –≤–∏ –Ω–µ –≤–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –£ –≤–∞—Å —â–µ —î ${numberAttempts} –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–±`)
                return await bot.sendMessage(chatId, `–û–±—Ä–∞–Ω–µ –≤–∞–º–∏ —á–∏—Å–ª–æ –±—É–ª–æ ${data > chat[chatId] ? '–º–µ–Ω—à–µ' : '–±—ñ–ª—å—à–µ'} –∑–∞–≥–∞–¥–∞–Ω–æ–≥–æ`)
            }
        })
        bot.on("polling_error", err => console.log(err));
    } catch (error) {
        console.log(error)
    }
}
start()